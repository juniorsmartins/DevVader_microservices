# --------------------------------------------------
# Spring Cloud Netflix - definição de nome, url do server eureka para registrar-se e porta aleatória (0) de operação
spring.application.name=devvader-clientes
eureka.client.serviceUrl.defaultZone=http://localhost:8761/eureka
server.port=0
# Identificação para o balanceador de carga
eureka.instance.instance-id=${spring.application.name}:${random.int}

# --------------------------------------------------
## Comunicação Assíncrona
## Número de requisições para fazer estatística e alterar status (fechado, aberto, meio-aberto)
#resilience4j.circuitbreaker.instances.noticiasPorCliente.slidingWindowSize: 4
## Número mínimo de requisições antes do Circuito Breaker entrar em ação. Tentará comunicar duas vezes antes de passar pra aberto e chamar o Circuit Breaker
#resilience4j.circuitbreaker.instances.noticiasPorCliente.minimumNumberOfCalls: 2
## Determina por quanto tempo deve ficar no status aberto
#resilience4j.circuitbreaker.instances.noticiasPorCliente.waitDurationInOpenState: 50s

# --------------------------------------------------
# Configuração do database PostgreSQL
spring.datasource.url=jdbc:postgresql://localhost:5432/devvader-clientes
spring.datasource.username=postgres
spring.datasource.password=123456
spring.datasource.driver-class-name=org.postgresql.Driver

# JPA
spring.jpa.show-sql=false
spring.jpa.properties.hibernate.format_sql=false
spring.jpa.hibernate.ddl-auto=create-drop
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQL95Dialect

# Para Data.sql
spring.jpa.defer-datasource-initialization=false
spring.sql.init.mode=never

# --------------------------------------------------
